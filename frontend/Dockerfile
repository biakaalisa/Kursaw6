# образ будет создан на основе образа Node.js с тегом "lts-alpine". Этот образ использует Alpine Linux в качестве базового дистрибутива и содержит установленный Node.js.
FROM node:lts-alpine
# переменная окружения NODE_ENV со значением "TB", которая будет использоваться в процессе сборки и работы контейнера.
#ENV NODE_ENV=TB
#  рабочая директория для всех последующих инструкций в Docker-файле
WORKDIR /usr/src/app
# копирует указанные файлы и папку внутрь образа в рабочую директорию 
COPY ["package.json", "package-lock.json*", "npm-shrinkwrap.json*", "./"]
# выполняет установку зависимостей, указанных в package.json, без установки devDependencies (из-за флага --production). --silent подавляет вывод npm. После установки зависимостей папка node_modules перемещается на уровень вверх.
RUN npm install --production --silent && mv node_modules ../
# копирует все файлы и папки из текущего каталога  внутрь образа в текущую рабочую директорию Dockerfile
COPY . .
# то контейнер будет работать с портом 3000
EXPOSE 3000
#  назначает владельца директории /usr/src/app на пользователя node
RUN chown -R node /usr/src/app
# от чьего имени будут выполняться последующие инструкции в Docker-контейнере.
#USER node
# команда, которая будет запущена при запуске контейнера
CMD ["npm", "start"] 
