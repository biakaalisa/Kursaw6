"""Migration

Revision ID: 1b18dd8360dc
Revises: 
Create Date: 2024-06-10 18:53:15.121204

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1b18dd8360dc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('size', sa.String(), nullable=False),
    sa.Column('branch', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hard_skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('soft_skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('f_name', sa.String(), nullable=False),
    sa.Column('s_name', sa.String(), nullable=False),
    sa.Column('t_name', sa.String(), nullable=False),
    sa.Column('contact_number', sa.String(), nullable=False),
    sa.Column('organization_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('size', sa.String(), nullable=False),
    sa.Column('branch', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('contact_person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('f_name', sa.String(), nullable=False),
    sa.Column('s_name', sa.String(), nullable=False),
    sa.Column('t_name', sa.String(), nullable=False),
    sa.Column('post', sa.String(), nullable=False),
    sa.Column('contact_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('f_name', sa.String(), nullable=False),
    sa.Column('s_name', sa.String(), nullable=False),
    sa.Column('t_name', sa.String(), nullable=False),
    sa.Column('birthday', sa.TIMESTAMP(), nullable=False),
    sa.Column('contact_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('education_data', sa.String(), nullable=False),
    sa.Column('spec', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('create_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deadline', sa.TIMESTAMP(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('budget', sa.Integer(), nullable=False),
    sa.Column('customer', sa.String(), nullable=False),
    sa.Column('team_leader', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('deadline', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_hard_skill',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('hard_skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['hard_skill_id'], ['hard_skill.id'], ),
    sa.PrimaryKeyConstraint('employee_id', 'hard_skill_id')
    )
    op.create_table('employee_project',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('employee_id', 'project_id')
    )
    op.create_table('employee_soft_skill',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('soft_skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['soft_skill_id'], ['soft_skill.id'], ),
    sa.PrimaryKeyConstraint('employee_id', 'soft_skill_id')
    )
    op.create_table('project_required_hard_skill',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('hard_skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hard_skill_id'], ['hard_skill.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'hard_skill_id')
    )
    op.create_table('project_required_soft_skill',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('soft_skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['soft_skill_id'], ['soft_skill.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'soft_skill_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_required_soft_skill')
    op.drop_table('project_required_hard_skill')
    op.drop_table('employee_soft_skill')
    op.drop_table('employee_project')
    op.drop_table('employee_hard_skill')
    op.drop_table('task')
    op.drop_table('project')
    op.drop_table('employee')
    op.drop_table('contact_person')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('soft_skill')
    op.drop_table('hard_skill')
    op.drop_table('customer')
    # ### end Alembic commands ###
